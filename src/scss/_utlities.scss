@use "variables";
@use "sass:map";
@use "mixins/bp-mixins";
@use "mixins/config";
@use "mixins/modifier-mixins";

.preloader {
  inset: 0;
  z-index: 100000;
  position: fixed;
  backface-visibility: hidden;
  background: variables.$white;

  .loader-status {
    inset: 0;
    margin: auto;
    position: absolute;
    width: variables.$space-xxl;
    height: variables.$space-xxl;
  }

  .spinner {
    border-radius: 100%;
    width: variables.$space-xxl;
    height: variables.$space-xxl;
    background-color: variables.$primary-color;
    animation: sk-scaleout 1s infinite ease-in-out;
  }
}

@keyframes sk-scaleout {
  0% {
    transform: scale(0);
  }

  100% {
    transform: scale(1);
    opacity: 0;
  }
}

@keyframes sk-scaleout {
  0% {
    transform: scale(0);
  }

  100% {
    opacity: 0;
    transform: scale(1);
  }
}

.light-bg {
  background-color: variables.$light-bg;
}

$directions: ("top", "right", "bottom", "left");

.p {
  @each $direction in $directions {
    &-#{$direction} {
      @include modifier-mixins.modifiers(config.$space, ("padding-#{$direction}"));
    }
  }

  &-horizontal {
    @include modifier-mixins.modifiers(config.$space, ("padding-left", "padding-right"));
  }

  &-vertical {
    @include modifier-mixins.modifiers(config.$space, ("padding-top", "padding-bottom"));
  }
}

.m {
  @each $direction in $directions {
    &-#{$direction} {
      @include modifier-mixins.modifiers(config.$space, ("margin-#{$direction}"));
    }
  }

  &-horizontal {
    @include modifier-mixins.modifiers(config.$space, ("margin-left", "margin-right"));
  }

  &-vertical {
    @include modifier-mixins.modifiers(config.$space, ("margin-top", "margin-bottom"));
  }
}

.visually-hidden {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;

  &:focus {
    clip: auto;
    height: auto;
    overflow: auto;
    position: absolute;
    width: auto;
  }
}
